#include<bits/stdc++.h>
using namespace std;

void pattern1(int a){
	for(int i=0;i<a;i++){
		for(int j=0;j<a;j++){
			cout<<"*";
		}
		cout<<endl;
	}}

void pattern2(int a){
	
	for(int i=0;i<a;i++){
		for(int j=0;j<=i;j++)
		{
			cout<<"*";
		}
		cout<<endl;
	}	}

void pattern3(int a){
	
	for(int i=1;i<=a;i++){
		for(int j=1;j<=i;j++)
		{
			cout<<j;
		}
		cout<<endl;
	}	}

void pattern4(int a){
	
	for(int i=1;i<=a;i++){
		for(int j=1;j<=i;j++)
		{
			cout<<i;
		}
		cout<<endl;
	}	}

void pattern5(int a){
	
	for(int i=a;i>0;i--){
		for(int j=i;j>0;j--)
		{
			cout<<"*";
		}
		cout<<endl;
	}	
}

void pattern6(int a){

	/*

	 [space,star,space] 

	space: n-i+1

	  *     [7, 1, 7]
     ***    [3, 3, 3]
    *****   [2, 5, 2]
   *******  [1, 7, 1]
  ********* [0, 9, 0]
  */
	for(int i=0;i<a;i++){

		for(int j=0;j<a-i+1;j++)
		{
			cout<<" ";
		}

		for(int j=0;j<2*i+1;j++){
			cout<<"*";
		}

		for(int j=0;j<a-i+1;j++)
			cout<<" ";
		cout<<endl;
	}
}

void pattern7(int a){
	/*

	[space,star,space] 

	space: j<i 
	star :2n-(2i+1)

	reverse of above pattern
			*********
			 ******* 
			  *****  
			   ***   
			    *    

  */
	for(int i=0;i<a;i++){

		for(int j=0;j<i;j++)
		{
			cout<<" ";
		}

		for(int j=0;j<2*a-(2*i+1);j++){
			cout<<"*";
		}

		for(int j=0;j<i;j++)
			cout<<" ";
		cout<<endl;
	}
}

void pattern8(int n){
	/*		*
			**
			***
			****
			*****
			**** ->second half
			***
			**
			*
			half of the pattern is same 
			for second half
			i>n 2*n-i;
	*/
	for(int i=1;i<=2*n-1;i++){
		int star=i;
		if(i>n) star=2*n-i;
		for(int j=1;j<=star;j++){
			cout<<"*";
		}
		cout<<endl;
	}
}

void pattern9(int n){

	/*	1
		01
		101
		0101
		10101
	*/


	int start=1;
	for(int i=0;i<n;i++){
		if(i%2==0) start=1;
		else start=0;
		for(int j=0;j<=i;j++){
			cout<<start;
			start=1-start;
		}
		cout<<endl;
	}
}
 
void pattern10(int n){

	/*
			1        1
			12      12
			123    123
			1234  1234
			1234512345

	*/
	int space=2*(n-1);

	for(int i=1;i<=n;i++){
		// number

		for(int j=1;j<=i;j++){
			cout<<j;
		}
		// space
		for(int j=1;j<=space;j++)
				cout<<" ";
		// number
		for(int j=1;j<=i;j++){
			cout<<j;
		}
		cout<<endl;
		space-=2;
	}
}

void pattern11(int n){
	/*
		1 
		2 3 
		4 5 6 
		7 8 9 10 
		11 12 13 14 15
	*/
	int num=1;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=i;j++){
			cout<<num<<" ";
			num++;
		}
		cout<<endl;
	}
}

void pattern12(int n){
	/*
			A 
			A B 
			A B C 
			A B C D 
			A B C D E 
	*/

	for(int i=0;i<n;i++){
		for(char ch='A';ch<='A'+i;ch++)
				cout<<ch<<" ";
		cout<<endl;
	}
}

void pattern13(int n){
	/*
			A B C D E 
			A B C D 
			A B C 
			A B 
			A 
	*/

	for(int i=0;i<n;i++){
		for(char ch='A';ch<'A'+n-i;ch++)
				cout<<ch<<" ";
		cout<<endl;
	}
}

void pattern14(int n){
	for(int i=0;i<n;i++){
		for(int j=0;j<=i;j++){
			char ch='A'+i;
			cout<<ch<<" ";
		}
		cout<<endl;
	}
}
void pattern15(int n){

	/*

				A    
			   ABA   
			  ABCBA  
			 ABCDCBA 
			ABCDEDCBA
	*/
	for(int i=0;i<n;i++){
		//space

		for(int j=0;j<n-i-1;j++){
			cout<<" ";
		}

		//char
		char ch='A';
		int bp=(2*i+1)/2;
		for(int j=1;j<=2*i+1;j++){
			cout<<ch;
			if(j<=bp ) ch++;
			else
				ch--;
		}
		//space
		for(int j=0;j<n-i-1;j++)
			cout<<" ";
		cout<<endl;
	}
}
void pattern16(int n){

	for(int i=n;i>=0;i--){
		for(char ch='A'+i;ch<='E';ch++)
		{
			cout<<ch;
		}
		cout<<endl;
	}

}
void pattern17(int n){
	/*		********** (star,space,star)
			****  ****	(4,2,4)
			***    ***  (3,4,3)
			**      **	(2,6,2)
			*        *	(1,8,1)
			*        *
			**      **
			***    ***
			****  ****
			**********
	

	solve upper half and lower half
	for upper 
		star=n-i;
		space=start from zero increment 2 by everytime
		star=n-i;
	
	for lower 
		star=j<=i
		space=start from 2*n-2 decrement 2 by everytime
		star=j<=i

	*/
	int spaces=0;
	for(int i=0;i<n;i++){
		// stars
		for(int j=1;j<=n-i;j++){
			cout<<"*";
		}
		// space
		for(int j=1;j<=spaces;j++){
			cout<<" ";
		}
		// stars
		for(int j=1;j<=n-i;j++){
			cout<<"*";
		}
		spaces+=2;
		cout<<endl;
	}
	int space=2*n-2;
	for(int i=0;i<n;i++){
		// stars
		for(int j=0;j<=i;j++){
			cout<<"*";
		}
		//space
		for(int j=0;j<space;j++){
			cout<<" ";
		}
		for(int j=0;j<=i;j++){
			cout<<"*";
		}
		space-=2;
		cout<<endl;
	}
}

void pattern18(int n){
			/*
					*        *
					**      **
					***    ***
					****  ****
					**********
					****  ****
					***    ***
					**      **
					*        *
			(star,space,star)
	fdasfasfafaaaaaa
			*/
		int space=2*n-2;
	for(int i=1;i<=2*n-1;i++){
		int star=i; 
		if(i>n) star=2*n-i;
		for(int j=1;j<=star;j++){
			cout<<"*";
		}
		for(int j=1;j<=space;j++){
			cout<<" ";
		}
		for(int j=1;j<=star;j++)
				cout<<"*";
		cout<<endl;
		if(i<n) space-=2;
		else space+=2;
	}
}
void pattern19(int n){
	/*	*****
		*   *
		*   *
		*   *
		*****
	*/




	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			if(i==0||j==0||i==n-1||j==n-1)
				cout<<"*";
			else
				cout<<" ";
		}
		cout<<endl;
	}
}

void pattern20(int n){
		/*		555555555
				544444445
				543333345
				543222345
				543212345
				543222345
				543333345
				544444445
				555555555
		first sub n-every ele in matrix
		then find distance of every ele 
		from top or bot or lef or right 
		select which is min 

		the matrix after substraction
				
					  0123456
					0 0000000
					1 0111110
					2 0122210
					3 0123210
					4 0122210
					5 0111110
					6 0000000
		so at (4,1)the shortest from any edge is 1
		so that is found using 
			top=i;// 1
			lef=j;//4
			rig=(2n-2)-j//8-4-1=3
			bot=(2n-2)-i//8-2-1=5
			min(1,4,3,5)=1;

			*/


	for(int i=0;i<2*n-1;i++){
		for(int j=0;j<2*n-1;j++){
			int top=i;
			int left=j;
			int right=(2*n-1)-1-j;
			int bot=(2*n-1)-1-i;
			cout<<(n-min(min(top,bot),min(left,right)));
		}
		cout<<endl;
	}
}
int main(){

	#ifndef a
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);	

	int a;
	cin>>a;
	// pattern1(a);
	// pattern2(a);
	// pattern3(a);
	// pattern4(a);
	// pattern5(a);
	// pattern6(a);
	// pattern7(a);
	// pattern8(a);
	// pattern9(a);
	// pattern10(a);
	// pattern11(a);
	// pattern12(a);
	// pattern13(a);
	// pattern14(a);
	// pattern15(a);
	// pattern16(a);
	// pattern17(a);
	// pattern18(a);
	// pattern19(a);
	pattern20(a);


























#endif





}	